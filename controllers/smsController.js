// Generated by Copilot
const User = require('../models/User');
const redisClient = require('../config/redis');

exports.storeSms = async (req, res) => {
  const { phonenumber } = req.params;
  const messageData = { ...req.body }; // Clone the request body
console.log('Received message data:', messageData);
  console.log('Received phone number:', phonenumber);
  try {
    // Extract and verify password
    const password = messageData.password;
    delete messageData.password; // Remove password before storing

    if (password !== process.env.STATIC_PASSWORD) {
      return res.status(401).json({
        success: false,
        message: 'Unauthorized'
      });
    }

    // Store exactly what was received (minus password)
    const result = await redisClient.set(
      phonenumber,
      JSON.stringify(messageData),
      'EX',
      600 // 10 minutes expiration
    );

    if (!result) {
      throw new Error('Failed to store message in Redis');
    }

    return res.status(200).json({
      success: true,
      data: messageData
    });
  } catch (error) {
    console.error('SMS storage error:', error);
    return res.status(500).json({
      success: false,
      message: error.message
    });
  }
};

exports.getSms = async (req, res) => {
  const { phonenumber } = req.params;

  try {
    const data = await redisClient.get(phonenumber);
    
    if (!data) {
      return res.status(404).json({
        success: false,
        message: 'No SMS found'
      });
    }

    return res.status(200).json({
      success: true,
      data: JSON.parse(data)
    });
  } catch (error) {
    console.error('SMS retrieval error:', error);
    return res.status(500).json({
      success: false,
      message: error.message
    });
  }
};